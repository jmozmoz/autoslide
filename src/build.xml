<?xml version="1.0" ?>

<project name="AutoSlide" default="dist">
  <dirname property="my.project.dir" file="${ant.file}"/>
  <property name="src.dir" value="." />
  <property name="dist.dir" value="../downloads/"/>
  <property name="app.name" value="Autoslide" />

  <property name="AMOdist.dir" value="../AMO/"/>
  <property name="www.dir" value="../www/"/>
  <property name="mccoy.cmd" value='c:/Program Files (x86)/mccoy/mccoy.exe'/>

	<!-- https://stackoverflow.com/questions/2527020/parse-json-with-ant -->
 <macrodef name="json-properties">
     <attribute name="jsonFile"/>
     <sequential>
         <local name="_jsonFile"/>
         <property name="_jsonFile" value="@{jsonFile}"/>
         <script language="javascript">//<![CDATA[
             var json = new Packages.java.lang.String(
                 Packages.java.nio.file.Files.readAllBytes(
                     Packages.java.nio.file.Paths.get(project.getProperty("_jsonFile"))), "UTF-8");
             var properties = JSON.parse(json);
             for(key in properties) {
                 project.setProperty(key, properties[key]);
             }
     //]]></script>
     </sequential>
 </macrodef>

  <target name="testmacro">
  	<json-properties jsonFile="${my.project.dir}/manifest.json"/>
    <echo message="version ${version}"/>
    <echo message="name ${name}"/>
  </target>


  <target name="clean">
    <delete file="${dist.dir}/${app.name}-${app.version}.xpi" />
  </target>

  <target name="dist">
    <json-properties jsonFile="${my.project.dir}/manifest.json"/>
    <zip destfile="${dist.dir}/${app.name}-${version}.xpi">
      <fileset dir="${src.dir}">
        <include name="manifest.json" />
        <include name="defaults/**" />
        <include name="chrome/**" />
        <include name="background.js" />
        <include name="api/**" />
        <exclude name="**/.*" />
        <exclude name="**/CVS/**" />
      </fileset>
    </zip>
  </target>

  <target name="spreadVersion">
    <echo message="new version: ${app.version}"/>
    <replaceregexp file="${www.dir}/installation.html"
                   byline="true"
                   match="(.*update the version.*AutoSlide-).*(.xpi&quot;>Version ).*( of Auto.*)"
                   replace="\1${app.version}\2${app.version}\3"/>

  </target>

</project>
